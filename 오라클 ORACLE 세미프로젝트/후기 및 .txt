
태민 


배점부여 프로시져
저는 지금 과정부분 INSERT UPDATE DELETE TRIGGER 만들고 있어요 개설과정쪽은 그대로구요.... ;
  현성 : 학생 INSERT, UPDATE(이름), DELETE TRIGGER, 학생 관리 기능 뷰?성적 출력 기능 뷰?
 ERD 수정했고, SQL 쿼리문작성 에로사항, 후기 및 총평 최대한 자세히   



-- 1. 성적입력 시 GR || 10001부터 생성되는 시퀀스 먼저 생성

CREATE SEQUENCE SEQ_GRADE
START WITH 10001
INCREMENT BY 1
NOMAXVALUE
NOCACHE;  




-- 1. 성적 입력 PRC_GRADE_INSERT(출결, 필기, 실기, 개설과목코드, 수강신청코드) 작동확인
-- EXEC PRC_GRADE_INSERT(출결, 필기, 실기, 개설과목코드, 수강신청코드);
CREATE OR REPLACE PROCEDURE PRC_GRADE_INSERT
( V_GRADE_ATT           IN GRADE.GRADE_ATT%TYPE
, V_GRADE_WT            IN GRADE.GRADE_WT%TYPE
, V_GRADE_PT            IN GRADE.GRADE_PT%TYPE
, V_OS_CODE             IN GRADE.OS_CODE%TYPE 
, V_APP_CODE            IN GRADE.APP_CODE%TYPE
)
IS
    V_GRADE_CODE    GRADE.GRADE_CODE%TYPE;
    V_GRADE_DATE    GRADE.GRADE_DATE%TYPE := SYSDATE;
    

    V_OS_END            OPENED_SUBJECT.OS_END%TYPE;          -- 개설과목 종료일       
    V_FAPP_ID           GRADE.APP_CODE%TYPE;                -- 수강신청코드 중복검사   
    V_FOP_SUB           GRADE.OS_CODE%TYPE;                 -- 개설과목코드 중복검사
    V_MID_DROP          NUMBER;                            -- 중도포기 
    
    
    MID_DROP_STU_ERROR EXCEPTION;                   -- 중도포기에러  
    APP_OVERLAP_ERROR EXCEPTION;                    -- 수강신청코드 중복시 에러 
    GRADE_DATE_ERROR   EXCEPTION;                   -- 개설과목 진행중에 성적입력X 에러

    CURSOR CUR_CHECK_APP
    IS 
    SELECT APP_CODE, OS_CODE
    FROM GRADE
    WHERE APP_CODE = V_APP_CODE; 
    
BEGIN

    V_GRADE_CODE :=('GR'||TO_CHAR(SEQ_GRADE.NEXTVAL));
    
    
    OPEN CUR_CHECK_APP;
        LOOP
        FETCH CUR_CHECK_APP INTO V_FAPP_ID, V_FOP_SUB;
        EXIT WHEN CUR_CHECK_APP%NOTFOUND;
        
        IF (V_OS_CODE = V_FOP_SUB AND  V_APP_CODE = V_FAPP_ID)
        THEN RAISE APP_OVERLAP_ERROR;
        END IF;
        END LOOP;
    CLOSE CUR_CHECK_APP;
    
    SELECT COUNT(*) INTO V_MID_DROP
    FROM QUITLIST
    WHERE APP_CODE = V_APP_CODE;
    
    IF (V_MID_DROP > 0)
        THEN RAISE MID_DROP_STU_ERROR;
    END IF;
    
    -- 과목 진행 중간에 성적 입력 불가 
    -- 끝나는 날짜보다 이르면 입력 불가
    SELECT OS_END INTO V_OS_END
    FROM OPENED_SUBJECT
    WHERE OS_CODE =  V_OS_CODE;

    IF (V_OS_END > SYSDATE)
        THEN RAISE GRADE_DATE_ERROR;
    END IF;

    INSERT INTO GRADE(GRADE_CODE, GRADE_DATE, GRADE_ATT, GRADE_WT, GRADE_PT, OS_CODE, APP_CODE)
    VALUES(V_GRADE_CODE, V_GRADE_DATE, V_GRADE_ATT, V_GRADE_WT, V_GRADE_PT, V_OS_CODE, V_APP_CODE);

    COMMIT;
    
    
    -- 예외처리
    EXCEPTION
        WHEN MID_DROP_STU_ERROR 
            THEN RAISE_APPLICATION_ERROR(-20601, '중도포기한 수업입니다.');
                ROLLBACK;
        WHEN APP_OVERLAP_ERROR
            THEN RAISE_APPLICATION_ERROR(-20602, '이미 성적이 등록된 학생입니다');
                ROLLBACK;
        WHEN GRADE_DATE_ERROR
            THEN RAISE_APPLICATION_ERROR(-20603, '성적입력기간이 아닙니다');
                ROLLBACK;

         WHEN OTHERS
            THEN ROLLBACK;
    
END;

--==>> Procedure PRC_GRADE_INSERT이(가) 컴파일되었습니다.



-- 2. 성적 수정 PRC_SCORE_UPDATE(성적코드, 출결, 필기, 실기)  작동확인
-- EXEC PRC_SCORE_UPDATE(성적코드, 출결, 필기, 실기); 
CREATE OR REPLACE PROCEDURE PRC_GRADE_UPDATE
( V_GRADE_CODE      IN GRADE.GRADE_CODE%TYPE
, V_GRADE_ATT       IN GRADE.GRADE_ATT%TYPE
, V_GRADE_WT        IN GRADE.GRADE_WT%TYPE
, V_GRADE_PT        IN GRADE.GRADE_PT%TYPE
)
IS
BEGIN
    -- 출결, 필기, 실기 업데이트
    UPDATE GRADE
    SET GRADE_ATT = V_GRADE_ATT, GRADE_WT = V_GRADE_WT, GRADE_PT = V_GRADE_PT
    WHERE GRADE_CODE = V_GRADE_CODE;
END;
--==>> Procedure PRC_GRADE_UPDATE이(가) 컴파일되었습니다.








---------------------------------------------------------------------------
-- 3. 성적 삭제 PRC_GRADE_DELETE(성적 코드) -- 작동확인
CREATE OR REPLACE PROCEDURE PRC_GRADE_DELETE
(
    V_GRADE_CODE    IN GRADE.GRADE_CODE%TYPE
)
IS
    NOTEXIST_ERROR EXCEPTION;
BEGIN
    DELETE
    FROM GRADE
    WHERE GRADE_CODE = V_GRADE_CODE;
    
    -- 결과 집합의 결과 ROW 수가 0이면 TRUE, 아니면 FALSE를 반환
    -- 조회 결과 수가 0일 경우엔 에러 발생
    IF SQL%NOTFOUND
    THEN RAISE NOTEXIST_ERROR;
    END IF;
    
    COMMIT;
    
    EXCEPTION 
        WHEN NOTEXIST_ERROR
            THEN RAISE_APPLICATION_ERROR(-20605,'일치하는 데이터가 없습니다.');
                ROLLBACK;
        WHEN OTHERS
            THEN ROLLBACK;    
END;
--==>> Procedure PRC_GRADE_DELETE이(가) 컴파일되었습니다.


중도탈락처리 
논리적으로 에러나는것들 처리





-- PRC_TEXT_TEXTBOOK(교재명 TB_NAME, 출판사 PUB)
CREATE OR REPLACE PROCEDURE PRC_TEXTBOOK_INSERT
( V_TB_NAME	IN TEXTBOOK.TB_NAME%TYPE
, V_PUB		IN TEXTBOOK.PUB%TYPE
)
IS
	-- 선언부
	CHECK_TB_NAME	TEXTBOOK.TB_NAME&TYPE;
	USER_DEFINE_ERROR EXCEPTION;
BEGIN
	SELECT NVL((SELECT
		    FROM TEXTBOOK
		    WHERE TB_NAME = V_TB_NAME), '0') INTO CHECK_TB_NAME
	FROM DAUL;

	IF (CHECK_TB_NAME != '0')
		THEN RAISE USER_DEFINE_ERROR;
	END IF;


	-- INSERT 쿼리문 수행
	INSERT INTO TEXTBOOK(TB_CODE, TB_NAME, PUB)
	VALUES('BK'|| LPAD(TO_CHAR(BOOK_SEQ.NEXTVAL), 4, '0')), V_TB_NAME, V_PUB);

	EXCEPTION
	WHEN USER_DEFINE_ERROR
	THEN RAISE_APPLICATION_ERROR(-20610, '이미 등록된 교재입니다.');
	ROLLBACK;

	-- 커밋
	COMMIT;
END;






교재, 관리자, 강의실








